name: Build and Release Python App

# on: [push] # Her push işlemi yapıldığında çalışır
# on:
#   release:
#     types: [published]  # Yalnızca yeni bir sürüm yayınlandığında çalışır
#   workflow_dispatch:  # Manuel tetikleme desteği

on:
  workflow_dispatch:  # Manuel tetikleme için
    inputs:
      tag_name:
        description: 'Sürüm Tag İsmi (Örneğin: v1.0.0)'
        required: true
      release_name:
        description: 'Release İsmi (Örneğin: İlk Sürüm)'
        required: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # python-version: 3.x
          python-version: 3.12
      - run: pip install pyinstaller
      - run: pyinstaller --onefile --noconsole --add-data "il_plaka.json;." main.py
      - name: Upload Windows Build as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: dist/*.exe

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # python-version: 3.x
          python-version: 3.11  # Daha stabil bir sürüm
      - run: pip install --upgrade pip setuptools wheel  # Bağımlılıkları güncelleyin
      - run: pip install py2app --use-pep517  # PEP 517 uyumlu kurulum yapın
      # - run: pip install py2app
      - run: python setup.py py2app
      - name: Upload Mac Build as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mac-app
          path: dist/*.app

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-mac]  # Build işlemleri tamamlandıktan sonra
    steps:
      - uses: actions/checkout@v2
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-app
          path: ./  # İndirilecek klasör
      - name: Download Mac Artifact
        uses: actions/download-artifact@v3
        with:
          name: mac-app
          path: ./  # İndirilecek klasör
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}  # Parametre olarak alınan tag
          release_name: ${{ github.event.inputs.release_name }}  # Parametre olarak alınan release adı
          body: "Otomatik olarak oluşturulmuş sürüm."
          draft: false
          prerelease: false
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows-app.exe
          asset_name: windows-app.exe
          asset_content_type: application/octet-stream
      - name: Upload Mac Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/mac-app.app
          asset_name: mac-app.app
          asset_content_type: application/octet-stream
