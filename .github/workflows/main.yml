name: Build and Release Python App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release Tag Name (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release Name (e.g., First Release)'
        required: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
          architecture: 'x64'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Windows App
        run: pyinstaller --onefile --noconsole --add-data "il_plaka.json;." main.py

      - name: Create ZIP for Windows
        run: |
          cd dist
          powershell Compress-Archive main.exe NamazZamani_Windows.zip

      - name: Upload Windows Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist/NamazZamani_Windows.zip

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Mac App
        run: pyinstaller --onefile --noconsole --add-data "il_plaka.json:." main.py

      - name: Create ZIP for Mac
        run: |
          cd dist
          zip -r NamazZamani_Mac.zip main

      - name: Upload Mac Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-app
          path: dist/NamazZamani_Mac.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Linux App
        run: pyinstaller --onefile --noconsole --add-data "il_plaka.json:." main.py

      - name: Create ZIP for Linux
        run: |
          cd dist
          zip -r NamazZamani_Linux.zip main

      - name: Upload Linux Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist/NamazZamani_Linux.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-mac, build-linux]
    steps:
      - uses: actions/checkout@v2

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: ${{ github.event.inputs.release_name }}
          body: "Automatically generated release for version ${{ github.event.inputs.tag_name }}"
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-app/NamazZamani_Windows.zip
          asset_name: NamazZamani_${{ github.event.inputs.tag_name }}_Windows.zip
          asset_content_type: application/zip

      - name: Upload Mac Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/mac-app/NamazZamani_Mac.zip
          asset_name: NamazZamani_${{ github.event.inputs.tag_name }}_Mac.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux-app/NamazZamani_Linux.zip
          asset_name: NamazZamani_${{ github.event.inputs.tag_name }}_Linux.zip
          asset_content_type: application/zip
