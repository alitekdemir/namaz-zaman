name: Build and Release Python App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Sürüm Tag İsmi (Örneğin: v1.0.0)'
        required: true
      release_name:
        description: 'Release İsmi (Örneğin: İlk Sürüm)'
        required: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Windows App
        run: pyinstaller --onefile --noconsole --name "NamazZamani-${{ github.event.inputs.tag_name }}-Windows" --add-data "il_plaka.json;." main.py

      - name: List Windows Build Directory
        run: ls -R dist/

      - name: Upload Windows Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist/NamazZamani-${{ github.event.inputs.tag_name }}-Windows.exe

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Mac App
        run: pyinstaller --onefile --noconsole --name "NamazZamani-${{ github.event.inputs.tag_name }}-MacOS" --add-data "il_plaka.json:." main.py

      - name: Create DMG
        run: |
          cd dist
          zip -r "NamazZamani-${{ github.event.inputs.tag_name }}-MacOS.zip" "NamazZamani-${{ github.event.inputs.tag_name }}-MacOS"

      - name: List Mac Build Directory
        run: ls -R dist/

      - name: Upload Mac Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-app
          path: dist/NamazZamani-${{ github.event.inputs.tag_name }}-MacOS.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install --upgrade pip setuptools wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Linux App
        run: pyinstaller --onefile --noconsole --name "NamazZamani-${{ github.event.inputs.tag_name }}-Linux" --add-data "il_plaka.json:." main.py

      - name: Create AppImage Package
        run: |
          cd dist
          chmod +x "NamazZamani-${{ github.event.inputs.tag_name }}-Linux"
          tar -czf "NamazZamani-${{ github.event.inputs.tag_name }}-Linux.tar.gz" "NamazZamani-${{ github.event.inputs.tag_name }}-Linux"

      - name: List Linux Build Directory
        run: ls -R dist/

      - name: Upload Linux Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist/NamazZamani-${{ github.event.inputs.tag_name }}-Linux.tar.gz

  create-release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          name: ${{ github.event.inputs.release_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/windows-app/*
            artifacts/mac-app/*
            artifacts/linux-app/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
